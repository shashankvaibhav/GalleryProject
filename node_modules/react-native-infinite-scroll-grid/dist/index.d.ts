import * as React from "react";
import { ListRenderItem, StyleProp, ViewStyle, NativeSyntheticEvent, NativeScrollEvent, Insets, PointPropType } from "react-native";
export interface Props<ItemT> {
    numColumns: number;
    style?: StyleProp<ViewStyle>;
    columnWrapperStyle?: StyleProp<ViewStyle>;
    data: ReadonlyArray<ItemT>;
    keyExtractor?: (item: ItemT, index: number) => string;
    renderItem: ListRenderItem<ItemT>;
    ListHeaderComponent?: React.ComponentClass<any> | React.ReactElement<any> | (() => React.ReactElement<any>);
    ListEmptyComponent?: React.ComponentClass<any> | React.ReactElement<any> | (() => React.ReactElement<any>);
    onRefresh?: (() => void);
    refreshing?: boolean;
    onEndReached?: ((info: {
        distanceFromEnd: number;
    }) => void) | null;
    loadingMore?: boolean;
    removeClippedSubviews?: boolean;
    marginInternal?: number;
    marginExternal?: number;
    keyboardDismissMode?: "none" | "interactive" | "on-drag";
    onScroll?: (event?: NativeSyntheticEvent<NativeScrollEvent>) => void;
    onScrollBeginDrag?: (event?: NativeSyntheticEvent<NativeScrollEvent>) => void;
    contentInset?: Insets;
    contentOffset?: PointPropType;
}
export default class Grid<ItemT> extends React.Component<Props<ItemT>> {
    private onEndReachedCalledDuringMomentum;
    constructor(props: Props<ItemT>);
    private renderItem;
    private keyExtractor;
    private onEndReached;
    private renderLoadingIndicator;
    render(): JSX.Element;
}
